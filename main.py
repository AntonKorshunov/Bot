from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from background import keep_alive
from aiogram.contrib.fsm_storage.memory import MemoryStorage  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º MemoryStorage
import asyncio
import datetime

storage = MemoryStorage()
bot = Bot('6603790479:AAFoPnf9t-0XJo1H6rSLc2hpyLR36vhnwFg')
dp = Dispatcher(bot)  # –ü–µ—Ä–µ–¥–∞–µ–º storage –≤ Dispatcher
last_ask_and_offer_time = None


# –ö–ª–∞—Å—Å –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–Ω–æ–≥–æ–≤–∞—Ä–∏–∞–Ω—Ç–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def ask_questions(user_id):
  # –°–æ–∑–¥–∞–µ–º InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
  keyboard = InlineKeyboardMarkup()
  keyboard.row(
    InlineKeyboardButton(text='1. –°–∫–æ–ª—å–∫–æ –º–µ—Ç–æ–¥–æ–≤ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –≤—Å–µ–≥–æ?',
                         callback_data='answer_1'))
  keyboard.row(
    InlineKeyboardButton(text='2. –ö–∞–∫–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏–∏ —á—Ç–æ –º–Ω–µ —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç?',
                         callback_data='answer_2'))
  keyboard.row(
    InlineKeyboardButton(text='3. –í –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –≥–∞–π–¥?',
                         callback_data='answer_3'))
  keyboard.row(
    InlineKeyboardButton(
      text='4. –ï—Å—Ç—å –ª–∏ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å? –ö—É–¥–∞ —è –º–æ–≥—É –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã?',
      callback_data='answer_4'))
  keyboard.row(
    InlineKeyboardButton(text='5. –ü–æ—á–µ–º—É —Ü–µ–Ω–∞ —Ç–∞–∫–∞—è –Ω–∏–∑–∫–∞—è?',
                         callback_data='answer_5'))

  await bot.send_message(user_id,
                         '''
–ú–∞–ª—ã—à–∫–∞, —Ç—ã –µ—â—ë –Ω–µ –∫—É–ø–∏–ª–∞ –≥–∞–π–¥?ü§î

–ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –º–Ω–µ –≤–æ–ø—Ä–æ—Å–∏–∫–∏‚¨áÔ∏è
''',
                         reply_markup=keyboard)


async def send_ask_and_offer_message(user_id):
  global last_ask_and_offer_time
  current_time = datetime.datetime.now()
  if last_ask_and_offer_time is None or (
      current_time - last_ask_and_offer_time).seconds >= 20:
    last_ask_and_offer_time = current_time
    await asyncio.sleep(20)
    await bot.send_message(user_id, "–ù—É —á—Ç–æ?)")

    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–±—Ä–∞—Ç—å, –µ—Å—Ç—å –ª–∏ —É –Ω–µ–≥–æ –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –æ–Ω –≥–æ—Ç–æ–≤ –∫ –æ–ø–ª–∞—Ç–µ
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
      InlineKeyboardButton(text='–î–∞, –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å–∏–∫',
                           callback_data='more_questions'))
    keyboard.row(
      InlineKeyboardButton(text='–ì–æ—Ç–æ–≤–∞ –∫—É–ø–∏—Ç—å',
                           url="https://payform.ru/kk2wQa4/"))
    await bot.send_message(user_id,
                           "–ï—â–µ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–ø–ª–∞—Ç–µ?",
                           reply_markup=keyboard)


@dp.callback_query_handler(text_contains='answer_')
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
async def process_answer(callback_query: types.CallbackQuery):
  answer_number = callback_query.data.replace('answer_', '')
  if answer_number == '1':
    await bot.send_message(
      callback_query.from_user.id, '''
–í—Å–µ–≥–æ 18 –º–µ—Ç–æ–¥–æ–≤ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º
–ë—É–¥—É—Ç –∫–∞–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ, —Ç–∞–∫ –∏ –ø–ª–∞—Ç–Ω—ã–µ –Ω–∞ –ª—é–±–æ–π –±—é–¥–∂–µ—Ç –æ—Ç 100‚ÇΩ''')
  elif answer_number == '2':
    await bot.send_message(
      callback_query.from_user.id, '''
–í—Å–µ –º–µ—Ç–æ–¥—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –Ω–∞ –º–Ω–µ –∏ –Ω–∞ –º–æ–∏—Ö —É—á–µ–Ω–∏—Ü–∞—Ö. –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. 
–ì–ª–∞–≤–Ω–æ–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏—Ö –≤—Å–µ, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –∫–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ
''')
  elif answer_number == '3':
    await bot.send_message(
      callback_query.from_user.id, '''
–°–∞–º –≥–∞–π–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ PDF. –û—Ñ–æ—Ä–º–ª–µ–Ω –≤ –µ–¥–∏–Ω–æ–º —Å—Ç–∏–ª–µ –¥–∏–∑–∞–π–Ω–µ—Ä–æ–º 
–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —Ç–µ–±–µ –Ω–∞ –ø–æ—á—Ç—É –ø—Ä–∏–¥–µ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –≥–∞–π–¥ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
''')
  elif answer_number == '4':
    await bot.send_message(
      callback_query.from_user.id, '''
–ö–æ–Ω–µ—á–Ω–æ. –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –µ—Å—Ç—å. –í –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è—Ö –∫ –≥–∞–π–¥—É –±—É–¥–µ—Ç –ø—Ä–æ–ø–∏—Å–∞–Ω–æ –∫—É–¥–∞ –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã
''')
  elif answer_number == '5':
    await bot.send_message(
      callback_query.from_user.id, '''
–¶–µ–Ω–∞ –ª–æ—è–ª—å–Ω–∞—è —á—Ç–æ–±—ã –≥–∞–π–¥ –º–æ–≥ –ø–æ–∑–≤–æ–ª–∏—Ç—å —Å–µ–±–µ –ª—é–±–æ–π –Ω–∞—á–∏–Ω–∞—é—â–∏–π –º–∞—Å—Ç–µ—Ä
''')
  await send_ask_and_offer_message(callback_query.from_user.id)
  await callback_query.answer(
  )  # –û—Ç–≤–µ—Ç–∏–º –Ω–∞ –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ "pending"


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "PURCHASED" –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ª–æ–≥–∞

  file1 = open('./1.jpg', 'rb')
  # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä–≤–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –∫–Ω–æ–ø–∫–∏ "–ó–∞–±–∏—Ä–∞–π –ø–æ–¥–∞—Ä–æ–∫"
  await bot.send_photo(message.chat.id,
                       photo=file1,
                       caption='''–ü—Ä–∏–≤–µ—Ç)
–ú–µ–Ω—è –∑–æ–≤—É—Ç –ò—Ä–∏–Ω–∞ –ö—É–∑—å–º–∏–Ω–∞, –Ω–æ –æ–± —ç—Ç–æ–º –ø–æ–∑–∂–µ

–Ø —Å–æ–±—Ä–∞–ª–∞ –¥–ª—è —Ç–µ–±—è —Å—Ö–µ–º—É, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —Å–∞–º–∞ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é 200–∫+ –Ω–∞ —Ä–µ—Å–Ω–∏—Ü–∞—Ö –∏ —Ç–µ–ø–µ—Ä—å –ø–µ—Ä–µ–¥–∞–º —Ç–µ–±–µ''',
                       parse_mode=types.ParseMode.HTML,
                       reply_markup=InlineKeyboardMarkup().add(
                         InlineKeyboardButton(
                           text='–ó–∞–±–∏—Ä–∞–π –ø–æ–¥–∞—Ä–æ–∫',
                           url="https://telegra.ph/200k-na-uslugah-07-12")))

  await asyncio.sleep(60)  # –û–∂–∏–¥–∞–µ–º 1 —Å–µ–∫—É–Ω–¥—É

  file2 = open('./2.jpg', 'rb')
  # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Ç–æ—Ä–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –∫–Ω–æ–ø–∫–∏ "–ß–∏—Ç–∞—Ç—å –≤ —Å—Ç–∞—Ç—å–µ"
  await bot.send_photo(
    message.chat.id,
    photo=file2,
    caption='''–ß—Ç–æ –º—ã –≤—ã—è—Å–Ω–∏–ª–∏?
–ù–∞—Å—Ç–∞–≤–Ω–∏–∫–∏ –±–µ—Ä—É—Ç –º–Ω–æ–≥–æ –¥–µ–Ω—è–∫ –∑–∞ –±–∞–Ω–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è

–ß—Ç–æ —è –ø—Ä–µ–¥–ª–∞–≥–∞—é?
–ì–∞–π–¥ –ø–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—é –∫–ª–∏–µ–Ω—Ç–æ–≤

–ö–∞–∫ –µ–≥–æ –ø–æ–ª—É—á–∏—Ç—å?
–ß–∏—Ç–∞–π –≤ —Å—Ç–∞—Ç—å–µ‚¨áÔ∏è''',
    parse_mode=types.ParseMode.HTML,
    reply_markup=InlineKeyboardMarkup().add(
      InlineKeyboardButton(
        text='–ß–∏—Ç–∞—Ç—å –≤ —Å—Ç–∞—Ç—å–µ',
        url="https://telegra.ph/Gajd-po-privlecheniyu-klientov-07-12")))

  await asyncio.sleep(60)  # –û–∂–∏–¥–∞–µ–º 1 —Å–µ–∫—É–Ω–¥—É

  file3 = open('./3.jpg', 'rb')
  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç—Ä–µ—Ç—å–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –∫–Ω–æ–ø–∫–∏ "–ë–æ–Ω—É—Å–Ω–∞—è —Å—Ç–∞—Ç—å—è"
  await bot.send_photo(message.chat.id,
                       photo=file3,
                       caption='''–ë–æ–Ω—É—Å–Ω–∞—è —Å—Ç–∞—Ç—å—èüíò
–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º. 
–ö–∞–∫ –ø–æ–¥–Ω—è—Ç—å —á–µ–∫. –ö–∞–∫ —É–ø–∞–∫–æ–≤–∞—Ç—å –±–ª–æ–≥''',
                       parse_mode=types.ParseMode.HTML,
                       reply_markup=InlineKeyboardMarkup().add(
                         InlineKeyboardButton(
                           text='–ë–æ–Ω—É—Å–Ω–∞—è —Å—Ç–∞—Ç—å—è',
                           url="https://telegra.ph/Bonusnaya-statya-07-12")))

  await asyncio.sleep(60)  # –û–∂–∏–¥–∞–µ–º 1 —Å–µ–∫—É–Ω–¥—É

  file4 = open('./4.jpg', 'rb')
  # –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ç–≤–µ—Ä—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –∫–Ω–æ–ø–æ–∫ "–ö—É–ø–∏—Ç—å" –∏ "–£–∑–Ω–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ"
  await bot.send_photo(message.chat.id,
                       photo=file4,
                       caption='''–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –ø—Ä–æ—à–ª–∞ –≤—Å–µ–≥–æ –±–æ—Ç–∞ü•≥
–ò —Ç–µ–ø–µ—Ä—å –∑–Ω–∞–µ—à—å –æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–∏ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –≥–∞–π–¥–∞ –ø–æ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—é –∫–ª–∏–µ–Ω—Ç–æ–≤

–°—Ç–æ–∏–º–æ—Å—Ç—å –≥–∞–π–¥–∞ 1990‚ÇΩ''',
                       parse_mode=types.ParseMode.HTML,
                       reply_markup=InlineKeyboardMarkup().row(
                         InlineKeyboardButton(
                           text='–ö—É–ø–∏—Ç—å', url="https://payform.ru/kk2wQa4/"),
                         InlineKeyboardButton(text='–£–∑–Ω–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ',
                                              callback_data='show_content')))

  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞ 10 –º–∏–Ω—É—Ç
  await asyncio.sleep(60)  # 600 —Å–µ–∫—É–Ω–¥ = 10 –º–∏–Ω—É—Ç
  await ask_questions(
    message.chat.id
  )  # Ask the questions if the user hasn't purchased the guide


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ "–î–∞, –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å–∏–∫" –∏–ª–∏ "–ì–æ—Ç–æ–≤–∞ –∫—É–ø–∏—Ç—å"
@dp.callback_query_handler(text_contains='more_questions')
@dp.callback_query_handler(text_contains='ready_to_buy')
async def process_questions_or_payment(callback_query: types.CallbackQuery):
  if 'more_questions' in callback_query.data:
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–î–∞, –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å–∏–∫", –∑–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –∑–∞–Ω–æ–≤–æ
    await ask_questions(callback_query.from_user.id)
  elif 'ready_to_buy' in callback_query.data:
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª "–ì–æ—Ç–æ–≤–∞ –∫—É–ø–∏—Ç—å", –∫–Ω–æ–ø–∫–∞ —Ç–∏–ø–∞ URL —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —ç—Ç–∞–ø–µ
    pass  # –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∏–∫–∞–∫–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏, —Ç–∞–∫ –∫–∞–∫ –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è Telegram –∫–ª–∏–µ–Ω—Ç–æ–º


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–£–∑–Ω–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ"
@dp.callback_query_handler(text_contains='show_content')
async def show_content(callback_query: types.CallbackQuery):
  content_text = '''
–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≥–∞–π–¥–∞:
 ‚ÅÉ –£–ø–∞–∫–æ–≤–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
 ‚ÅÉ –ê–≤–∞—Ç–∞—Ä–∫–∞
 ‚ÅÉ –ù–∏–∫
 ‚ÅÉ –®–∞–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è
 ‚ÅÉ –•–∞–π–ª–∞—Ç—Å/–∞–∫—Ç—É–∞–ª—å–Ω–æ–µ
 ‚ÅÉ –í–∏–∑—É–∞–ª
 ‚ÅÉ –ü—Ä–∞–π—Å, —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –ø–æ–¥–Ω—è—Ç–∏–µ —Ü–µ–Ω
 ‚ÅÉ –ß—Ç–æ —Ç–∞–∫–æ–µ –ª–∏—á–Ω—ã–π –±—Ä–µ–Ω–¥
 ‚ÅÉ –Ø–∫–æ—Ä—è
 ‚ÅÉ –°—Ç–æ—Ä–∏—Å. –ö–∞–∫ –æ—Ñ–æ—Ä–º–ª—è—Ç—å. –ü—Ä–æ —á—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç—å
 ‚ÅÉ –ü—Ä–æ–≥—Ä–µ–≤ –∫ —É—Å–ª—É–≥–µ –≤ —Å—Ç–æ—Ä–∏—Å. –ü—Ä–∏–º–µ—Ä—ã
 ‚ÅÉ –†–∞–±–æ—Ç–∞ —Å –º–æ–¥–µ–ª—è–º–∏
 ‚ÅÉ –†–∞–±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑–æ–π. –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ—Å—Ç—å. 
 ‚ÅÉ –°–µ—Ä–≤–∏—Å
 ‚ÅÉ –†–∞—Å—Å—ã–ª–∫–∏ –ø–æ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –±–∞–∑–µ
 ‚ÅÉ –•–æ–ª–æ–¥–Ω—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç. 
 ‚ÅÉ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ 
 ‚ÅÉ –ú–∞—Å—Ç–µ—Ä–∞ —Å–º–µ–∂–Ω—ã—Ö –Ω–∏—à. –õ—É—á—à–∏–π —Å–ø–æ—Å–æ–± —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ 
 ‚ÅÉ –ë–ª–æ–≥–µ—Ä—ã. –†–µ–∫–ª–∞–º–∞, –¢–ó
 ‚ÅÉ –•—ç—à—Ç–µ–≥–∏ –∏ –≥–µ–æ–º–µ—Ç–∫–∏
 ‚ÅÉ –í–∫ –∏ –≤–∫ —Ç–∞—Ä–≥–µ—Ç. –û–±—ä—è–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤. 
 ‚ÅÉ –†–µ–∫–ª–∞–º–∞ –≤ –≥–æ—Ä–æ–¥—Å–∫–∏—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤–∞—Ö
 ‚ÅÉ –ê–≤–∏—Ç–æ, —é–ª–∞ –∏ –ø—Ä–æ—Ñ–∏. –ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ–Ω–æ –ø—Ä–æ–¥–∞–≤–∞–ª–æ. 
 ‚ÅÉ DIKIDI. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤. –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∏ –ø–ª–∞—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞. 
 ‚ÅÉ –†–µ–∫–ª–∞–º–∞ –≤ —á–∞—Ç–∞—Ö –∂–∫, —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–≤, —à–∫–æ–ª –∏ —Ç–¥. –ò–¥–µ–∞–ª—å–Ω–∞—è —Å–≤—è–∑–∫–∞ –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–æ—Å–∏—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤
 ‚ÅÉ –ù–∞—Ä—É–∂–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞. –ü—Ä–∏–º–µ—Ä—ã, –≤–∏–¥—ã
 ‚ÅÉ –ö–æ–Ω–∫—É—Ä—Å–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∫–∏
 ‚ÅÉ –ë—å—é—Ç–∏ –∑–∞–≤—Ç—Ä–∞–∫–∏, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –æ—Ñ—Ñ–ª–∞–π–Ω –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
*–∑–∞ —Ç–∞–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —ç—Ç–æ –ø—ã–ª—å, –∞ –Ω–µ –¥–µ–Ω—å–≥–∏
    '''

  # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π InlineKeyboardMarkup —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ö—É–ø–∏—Ç—å"
  keyboard = InlineKeyboardMarkup()
  url_button4 = InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å',
                                     url="https://payform.ru/kk2wQa4/")
  keyboard.row(url_button4)

  await bot.send_message(callback_query.from_user.id,
                         content_text,
                         reply_markup=keyboard)
  await callback_query.answer()  # –û—Ç–º–µ—Ç–∏–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª–∏ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏


keep_alive()
if __name__ == '__main__':
  executor.start_polling(dp)
